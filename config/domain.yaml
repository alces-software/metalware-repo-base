
cluster: '<%= answer.cluster_name %>'
# GENERATE with `openssl passwd -1 $PASSWD`.
# XXX Change this so admin enters plain text root password, and we generate
# encrypted password here?
encrypted_root_password: '<%= answer.root_password %>'
profile: MASTER
ssh_key: '<%= answer.root_ssh_key %>'

# Generic networking properties.
domain: <%= answer.domain %>
search_domains: "<% config.networks.each do |network, details| -%><% next if network.to_s == 'ext' %><%= details.domain %><%= if network.to_s == 'bmc' then '.mgt' else '' end %>.<%= config.domain %> <% end -%><%= config.domain %>"
dns_type: "named"
externaldns: <%= answer.externaldns %>
internaldns: 10.10.0.1
kernelappendoptions: "console=tty0 console=ttyS1,115200n8"
jobid: ""

# Properties for specific config.networks.
networks:
  pri:
    defined: true
    interface: "eth0"
    hostname: "<%= config.networks.pri.short_hostname %>.<%= config.domain %>"
    domain: "pri"
    short_hostname: "<%= node.name %>.<%= config.networks.pri.domain %>"
    ip: "10.10.0.<%= node.index %>"
    netmask: "255.255.0.0"
    network: "10.10.0.0"
    gateway: "10.10.0.1"
    primary: true
    named_fwd_zone: "<%= config.networks.pri.domain %>.<%= config.domain %>"
    named_rev_zone: <% split_net = config.networks.pri.network.split(/\./) -%><%= split_net[1] %>.<%= split_net[0] %>
    firewallpolicy: trusted

  mgt:
    defined: true
    interface: "eth1"
    hostname: "<%= config.networks.mgt.short_hostname %>.<%= config.domain %>"
    domain: "mgt"
    short_hostname: "<%= node.name %>.<%= config.networks.mgt.domain %>"
    ip: "10.11.100.<%= node.index %>"
    netmask: "255.255.0.0"
    network: "10.11.0.0"
    gateway:
    named_fwd_zone: "<%= config.networks.mgt.domain %>.<%= config.domain %>"
    named_rev_zone: <% split_net = config.networks.mgt.network.split(/\./) -%><%= split_net[1] %>.<%= split_net[0] %>
    firewallpolicy: trusted

  ib:
    defined: true
    interface: "ib0"
    hostname: "<%= config.networks.ib.short_hostname %>.<%= config.domain %>"
    domain: "ib"
    short_hostname: "<%= node.name %>.<%= config.networks.ib.domain %>"
    ip: "10.12.100.<%= node.index %>"
    netmask: "255.255.0.0"
    network: "10.12.0.0"
    gateway:
    named_fwd_zone: "<%= config.networks.ib.domain %>.<%= config.domain %>"
    named_rev_zone: <% split_net = config.networks.ib.network.split(/\./) -%><%= split_net[1] %>.<%= split_net[0] %>
    firewallpolicy: trusted

  bmc:
    defined: true
    interface: bmc
    hostname: "<%= config.networks.bmc.short_hostname %>.<%= config.networks.mgt.domain %>.<%= config.domain %>"
    domain: 'bmc'
    short_hostname: "<%= node.name %>.<%= config.networks.bmc.domain %>"
    ip: "10.11.0.<%= node.index %>"
    netmask: "255.255.0.0"
    network: "10.11.0.0"
    gateway: 0.0.0.0
    bmcpassword: "<%= answer.bmc_password %>"
    bmcchannel: 1
    bmcuser: admin
    bmcuserid: 2
    bmcvlan: <%= answer.bmc_network_vlan %>

disklabel: 'sda'
disksetup: |
  clearpart --all --initlabel
  zerombr
  bootloader --location=mbr --driveorder=<%= config.disklabel %> --append="$bootloaderappend"

  #Disk partitioning information
  part /boot --fstype ext4 --size=4096 --asprimary --ondisk <%= config.disklabel %>
  part pv.01 --size=1 --grow --asprimary --ondisk <%= config.disklabel %>
  volgroup system pv.01
  logvol  /  --fstype ext4 --vgname=system  --size=16384 --name=root
  logvol  /var --fstype ext4 --vgname=system --size=16384 --name=var
  logvol  /tmp --fstype ext4 --vgname=system --size=1 --grow --name=tmp
  logvol  swap  --fstype swap --vgname=system  --size=8096  --name=swap1

#disklabel2: 'sdb'
#disksetup: |
#  clearpart --all --initlabel
#  zerombr
#
#  bootloader --location=mbr --driveorder=<%= config.disklabel %> --append="$bootloaderappend"
#
#  #Disk partitioning information
#  part /boot --fstype ext4 --size=1024 --asprimary --ondisk <%= config.disklabel %>
#  part /boot2 --fstype ext4 --size=1024 --asprimary --ondisk <%= config.disklabel2 %>
#
#  part raid.01 --size 60000 --ondisk <%= config.disklabel %> --asprimary
#  part raid.02 --size 60000 --ondisk <%= config.disklabel2 %> --asprimary
#
#  raid pv.01 --level=1 --fstype=ext4 --device=md0 raid.01 raid.02
#  volgroup system pv.01
#  logvol  /  --fstype ext4 --vgname=system  --size=1  --name=root --grow
#  logvol  /var  --fstype ext4 --vgname=system  --size=16384  --name=var
#  logvol  swap  --fstype swap --vgname=system  --size=16384  --name=swap1
#
#  part raid.03 --size=1 --ondisk <%= config.disklabel %> --asprimary --grow
#  part raid.04 --size=1 --ondisk <%= config.disklabel2 %> --asprimary --grow
#
#  raid /tmp --fstype ext4 --fstype=ext4 --device=md1 --level=0 raid.03 raid.04

templates:
  kickstart: default
  pxelinux: default 

files:
  platform:
    - /opt/alces/install/scripts/aws.sh
  main:
    - main.sh
  setup:
    - local-script.sh
  core:
    - core/base.sh
    - core/chrony.sh
    - core/configs/chrony.conf
    - core/firstrun_scripts/chronyfix.bash
    - core/syslog.sh
    - core/configs/metalware.conf
    - core/configs/rsyslog-remote
    - core/firstrun_scripts/firewall_rsyslog.bash
    - core/postfix.sh
    - core/network-base.sh
    - core/network-ipmi.sh
    - core/network-join.sh
    - core/networking.sh
    - core/configs/authorized_keys
    - core/firstrun_scripts/firewall_main.bash
  scripts:
    - local-script.sh

ntp:
  is_server: false
  server: controller.<%= config.networks.pri.domain %>.<%= config.domain %>

rsyslog:
  is_server: false
  server: controller

firewall:
  enabled: true
  internal:
    services: 'ssh http dhcp dns https mountd nfs ntp rpc-bind smtp syslog tftp tftp-client'
  external:
    services: 'ssh'
  management:
    services: 'ssh snmp'

postfix:
  relayhost: "controller.<%= config.networks.pri.domain %>.<%= config.domain %>"

is_vm: '<%= answer.is_vm %>'
libvirt_host: '<%= answer.libvirt_host %>'
vm_disk_pool: '<%= answer.vm_disk_pool %>'
vm_mac_address_build: '<%= answer.vm_mac_address_build %>'
