
cluster: '<%= answer.cluster_name %>'
# GENERATE with `openssl passwd -1 $PASSWD`.
# XXX Change this so admin enters plain text root password, and we generate
# encrypted password here?
encrypted_root_password: '<%= answer.root_password %>'
profile: MASTER
ssh_key: '<%= answer.root_ssh_key %>'
build_method: basic

# Generic networking properties.
domain: <%= answer.domain %>
cloudware_domain: <%= answer.cloudware_domain %>
search_domains: "<% config.networks.each do |network, details| -%><% next if network.to_s == 'ext' %><%= details.domain %><%= if network.to_s == 'bmc' then '.mgt' else '' end %>.<%= config.domain %> <% end -%><%= config.domain %>"
dns_type: "<%= answer.dns_type %>"
externaldns: <%= answer.externaldns %>
internaldns: <%= answer.internaldns %>

# Properties for specific config.networks.
networks:
  pri:
    defined: <%= answer.pri_network_defined %>
    interface: "<%= answer.pri_network_interface %>"
    hostname: "<%= config.networks.pri.short_hostname %>.<%= config.domain %>"
    domain: "<%= answer.pri_network_domain %>"
    short_hostname: "<%= node.name.sub(node.group.name + '-', '') %>.<%= config.networks.pri.domain %>"
    ip: "<%= answer.pri_network_ip_node || answer.pri_network_ip %>"
    netmask: "<%= answer.pri_network_netmask %>"
    network: "<%= answer.pri_network_network %>"
    gateway: "<%= answer.pri_network_gateway %>"
    primary: true
    named_fwd_zone: "<%= config.networks.pri.domain %>.<%= config.domain %>"
    named_rev_zone: <% split_net = config.networks.pri.network.split(/\./) -%><%= split_net[1] %>.<%= split_net[0] %>
    firewallpolicy: trusted

files:
  platform:
    - /opt/alces/install/scripts/aws.sh
  main:
    - main.sh
  setup:
    - local-script.sh
  core:
    - core/base.sh
    - core/chrony.sh
    - core/configs/chrony.conf
    - core/firstrun_scripts/chronyfix.bash
    - core/syslog.sh
    - core/configs/metalware.conf
    - core/configs/rsyslog-remote
    - core/firstrun_scripts/firewall_rsyslog.bash
    - core/postfix.sh
    - core/network-base.sh
    - core/network-join.sh
    - core/networking.sh
    - core/configs/authorized_keys
    - core/firstrun_scripts/firewall_main.bash
  scripts:
    - local-script.sh

ntp:
  is_server: false
  server: controller.dom0.<%= config.domain %>

rsyslog:
  is_server: false
  server: controller

firewall:
  enabled: true
  internal:
    services: 'ssh http dhcp dns https mountd nfs ntp rpc-bind smtp syslog tftp tftp-client'
  external:
    services: 'ssh'
  management:
    services: 'ssh snmp'

postfix:
  relayhost: "<%= answer.postfix_relay %>"

is_vm: '<%= answer.is_vm %>'
libvirt_host: '<%= answer.libvirt_host %>'
vm_disk_pool: '<%= answer.vm_disk_pool %>'
vm_mac_address_build: '<%= answer.vm_mac_address_build %>'
